create table if not exists community_settings (
  id bigint generated by default as identity primary key,
  community_id text unique not null,
  logo_url text,
  primary_color text,
  secondary_color text,
  welcome_message_title text,
  welcome_message_body text,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Add RLS (Row Level Security) policies
alter table community_settings enable row level security;

-- Allow authenticated users to view settings (adjust as needed for public/private settings)
create policy "Community settings are viewable by authenticated users."
  on community_settings for select using (auth.role() = 'authenticated');

-- Allow community owners to insert/update their settings
create policy "Community owners can insert their settings."
  on community_settings for insert with check (auth.uid() = community_id); -- Assuming community_id maps to auth.uid for simplicity

create policy "Community owners can update their settings."
  on community_settings for update using (auth.uid() = community_id); -- Assuming community_id maps to auth.uid for simplicity

